---
source: crates/rolldown_testing/src/integration_test.rs
snapshot_kind: text
---
# Assets

## main.js

```js
import assert, { default as assert$1 } from "node:assert";


//#region foo.js
var foo_exports = {};
__export(foo_exports, { default: () => foo$1 });
function foo$1(a$1$1) {
	assert$1.equal(a$1$1, a$1$1);
	assert$1.equal(a$1, 1);
}
var a$1;
var init_foo = __esm({ "foo.js"() {
	a$1 = 1;
} });

//#endregion
//#region bar.js
init_foo();
var bar_default = { foo: foo$1 };

//#endregion
//#region main.js
const a = 2;
const { foo } = bar_default;
assert.strictEqual(typeof foo, "function");
init_foo();

//#endregion
//# sourceMappingURL=main.js.map
```

# Sourcemap Visualizer

```
- ../foo.js
(4:15) "function " --> (22:0) "function "
(4:24) "foo(" --> (22:9) "foo$1("
(4:28) "a$1) " --> (22:15) "a$1$1) "
(4:33) "{\n" --> (22:22) "{\n"
(5:2) "assert." --> (23:0) "\tassert$1."
(5:9) "equal(" --> (23:10) "equal("
(5:15) "a$1, " --> (23:16) "a$1$1, "
(5:20) "a$1)" --> (23:23) "a$1$1)"
(5:24) "\n" --> (23:29) ";\n"
(6:2) "assert." --> (24:0) "\tassert$1."
(6:9) "equal(" --> (24:10) "equal("
(6:15) "a, " --> (24:16) "a$1, "
(6:18) "1)" --> (24:21) "1)"
(6:20) "\n" --> (24:23) ";\n"
(7:1) "\n" --> (25:0) "}\n"
(2:6) "a = " --> (28:1) "a$1 = "
(2:10) "1;\n" --> (28:7) "1;\n"
- ../bar.js
(0:0) "import foo from './foo'" --> (33:0) "init_foo()"
(0:23) "\n" --> (33:10) ";\n"
(2:15) "{ " --> (34:18) "{ "
(2:17) "foo }" --> (34:20) "foo: foo$1 "
(2:22) "" --> (34:31) "};\n"
- ../main.js
(3:0) "const " --> (38:0) "const "
(3:6) "a = " --> (38:6) "a = "
(3:10) "2; // make foo `a` conflict\n" --> (38:10) "2;\n"
(5:0) "const " --> (39:0) "const "
(5:6) "{ " --> (39:6) "{ "
(5:8) "foo }" --> (39:8) "foo }"
(5:13) " = " --> (39:13) " = "
(5:16) "bar\n" --> (39:16) "bar_default;\n"
(7:0) "assert." --> (40:0) "assert."
(7:7) "strictEqual(typeof " --> (40:7) "strictEqual(typeof "
(7:26) "foo, " --> (40:26) "foo, "
(7:31) "'function')" --> (40:31) "\"function\")"
(7:42) "\n" --> (40:42) ";\n"
(9:0) "require('./foo')\n" --> (41:0) "init_foo();\n"
```
